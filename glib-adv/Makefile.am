
AM_CPPFLAGS=
AM_LDFLAGS=

# public headers
# it will be moved to include/Makefile.am
include_HEADERS = \
    acquis.h \
    adox.h \
    aest.h \
    amazon.h \
    appsrv.h \
    bde.h \
    biling.h \
    bix.h \
    book.h \
    bowactlearn.h \
    bowbs.h \
    bowclust.h \
    bowfl.h \
    bowflx.h \
    bowlearn.h \
    bowlinalg.h \
    bowmatrix.h \
    bowmd.h \
    btalarms.h \
    btaServer.h \
    cache.h \
    casino.h \
    ccar.h \
    cfyres.h \
    cgi.h \
    ciawfb.h \
    conjgrad.h \
    cordis.h \
    corrgr.h \
    cpdoc.h \
    crawler.h \
    cyc.h \
    dm.h \
    dmhd.h \
    dmine.h \
    dmoz.h \
    dnet.h \
    dzs.h \
    email.h \
    euproj.h \
    exset.h \
    fa.h \
    flx.h \
    ftrgen.h \
    geoip.h \
    gix.h \
    gks.h \
    gksmfc.h \
    gksvcl.h \
    gksvml.h \
    gkswf.h \
    google.h \
    googlex.h \
    graph.h \
    gridvcl.h \
    gsearch.h \
    guid.h \
    hashgenericmp.h \
    hc.h \
    hldoc.h \
    infonet.h \
    kernelmethods.h \
    logreg.h \
    lsionto.h \
    md.h \
    mdtr.h \
    medline.h \
    mg.h \
    mindset.h \
    mine.h \
    mkcca.h \
    mte.h \
    mtr.h \
    net.h \
    netobj.h \
    nlpwinlf.h \
    nmen.h \
    nmobj.h \
    nntp.h \
    nyta.h \
    nytngrams.h \
    odbc.h \
    ontolight.h \
    pest.h \
    phrase.h \
    pi.h \
    postag.h \
    prolog.h \
    prologparser.h \
    proxy.h \
    rdbms.h \
    roget.h \
    sappsrv.h \
    sch.h \
    semspace.h \
    sgraph.h \
    skygrid.h \
    smtp.h \
    soap.h \
    sock.h \
    sock-new.h \
    sqlite3.h \
    sqlitedb.h \
    ssch.h \
    sskj.h \
    ssqldm.h \
    ssql.h \
    stemming.h \
    stopword.h \
    strkernel.h \
    strut.h \
    subprocess.h \
    svmbasic.h \
    svmmodels.h \
    svmPrLoqo.h \
    tagcloud.h \
    tb.h \
    tbhc.h \
    tbval.h \
    term.h \
    tmine.h \
    tnt.h \
    tql.h \
    ts.h \
    txtbs.h \
    ultra.h \
    valds.h \
    valret.h \
    vizmapgks.h \
    vizmap.h \
    wbmp.h \
    webbsfetch.h \
    webmb.h \
    webnetobj.h \
    webold.h \
    webpgfetch.h \
    websrv.h \
    webtrv.h \
    webtxtbs.h \
    wikipedia.h \
    wixexp.h \
    wix.h \
    wmine.h \
    wordco.h \
    wordnet.h \
    xql.h \
    yahoobs.h \
    yahoodm.h \
    yahooex.h \
    zipcode.h \
    $(NULL)

# libglib:
lib_LTLIBRARIES=libglib-adv.la

OTHER_SOURCES= \
    dmine.cpp \
    tmine.cpp \
    wmine.cpp \
    acquis.cpp \
    adox.cpp \
    aest.cpp \
    amazon.cpp \
    appsrv.cpp \
    bde.cpp \
    biling.cpp \
    bix.cpp \
    book.cpp \
    bowactlearn.cpp \
    bowbs.cpp \
    bowclust.cpp \
    bowfl.cpp \
    bowflx.cpp \
    bowlearn.cpp \
    bowlinalg.cpp \
    bowmatrix.cpp \
    bowmd.cpp \
    btalarms.cpp \
    btaserver.cpp \
    casino.cpp \
    ccar.cpp \
    cfyres.cpp \
    cgi.cpp \
    ciawfb.cpp \
    cordis.cpp \
    corrgr.cpp \
    cpdoc.cpp \
    crawler.cpp \
    cyc.cpp \
    dm.cpp \
    dmhd.cpp \
    dmoz.cpp \
    dnet.cpp \
    dzs.cpp \
    email.cpp \
    euproj.cpp \
    exset.cpp \
    fa.cpp \
    flx.cpp \
    ftrgen.cpp \
    geoip.cpp \
    gix.cpp \
    gks.cpp \
    gksmfc.cpp \
    gksvcl.cpp \
    gksvml.cpp \
    gkswf.cpp \
    google.cpp \
    googlex.cpp \
    graph.cpp \
    gridvcl.cpp \
    gsearch.cpp \
    guid.cpp \
    hc.cpp \
    hldoc.cpp \
    infonet.cpp \
    kernelmethods.cpp \
    logreg.cpp \
    lsionto.cpp \
    md.cpp \
    mdtr.cpp \
    medline.cpp \
    mg.cpp \
    mkcca.cpp \
    mte.cpp \
    mtr.cpp \
    net.cpp \
    netobj.cpp \
    nlpwinlf.cpp \
    nmen.cpp \
    nmobj.cpp \
    nntp.cpp \
    nyta.cpp \
    nytngrams.cpp \
    odbc.cpp \
    ontolight.cpp \
    pest.cpp \
    phrase.cpp \
    pi.cpp \
    postag.cpp \
    prolog.cpp \
    prologparser.cpp \
    proxy.cpp \
    pww.cpp \
    rdbms.cpp \
    roget.cpp \
    sappsrv.cpp \
    sch.cpp \
    semspace.cpp \
    sgraph.cpp \
    skygrid.cpp \
    smtp.cpp \
    soap.cpp \
    sock.cpp \
    sock-new.cpp \
    sqlitedb.cpp \
    ssch.cpp \
    sskj.cpp \
    ssql.cpp \
    ssqldm.cpp \
    stemming.cpp \
    stopword.cpp \
    strkernel.cpp \
    strut.cpp \
    subprocess.cpp \
    svmbasic.cpp \
    svmmodels.cpp \
    svmPrLoqo.cpp \
    tagcloud.cpp \
    tb.cpp \
    tbhc.cpp \
    tbval.cpp \
    term.cpp \
    tnt.cpp \
    tql.cpp \
    ts.cpp \
    txtbs.cpp \
    ultra.cpp \
    valds.cpp \
    valret.cpp \
    vizmap.cpp \
    vizmapgks.cpp \
    wbmp.cpp \
    webbsfetch.cpp \
    webmb.cpp \
    webnetobj.cpp \
    webold.cpp \
    webpgfetch.cpp \
    websrv.cpp \
    webtrv.cpp \
    webtxtbs.cpp \
    wikipedia.cpp \
    wix.cpp \
    wixexp.cpp \
    wordco.cpp \
    wordnet.cpp \
    xql.cpp \
    yahoobs.cpp \
    yahoodm.cpp \
    yahooex.cpp \
    zipcode.cpp \
    $(NULL)

libglib_adv_la_SOURCES= \
    mine.cpp \
    $(NULL)

libglib_adv_la_CPPFLAGS=

AM_CPPFLAGS+= \
    $(NULL)

DEFS+= \
    -I$(top_srcdir)/glib-core \
    -I$(top_srcdir)/glib-adv \
    -I$(top_builddir)/ \
    `getconf LFS_CFLAGS` \
    `getconf LFS64_CFLAGS` \
    -D_GNU_SOURCE \
    -DHAVE_MMAP64=1 \
    -I/usr/include/libiberty \
    $(NULL)

if DEBUG
# use "valgrind --tool=memcheck --leak-check=yes" to check memory leak, MemWatch will drag the program.
#DEFS+=-DMEMWATCH=1
DEFS+= -DDEBUG=1
DEFS+= -DNDEBUG=1

AM_CPPFLAGS+=-g -Wall

else
AM_CPPFLAGS+=-O3
endif

AM_LDFLAGS += \
    -L$(top_builddir)/glib-core \
    -L$(top_builddir)/glib-adv \
    $(top_builddir)/glib-core/libglib-core.la \
    $(top_builddir)/glib-adv/libglib-adv.la \
    #-lsnap-exp -lsnap-adv -lsnap-core -lglib-adv -lglib-core

bin_PROGRAMS=testbase

testbase_SOURCES= \
    testBase.cpp \
    base.cpp \
    mine.cpp \
    #dummy.cpp \
    $(NULL)

# force the autoconf use g++ to link the c program with c++ lib
dummy.cpp:
	touch $@

#testbase_LDADD = -lsnap-exp -lsnap-adv -lsnap-core -lglib-adv -lglib-core
testbase_LDADD = $(AM_LDFLAGS)

testbase_CPPFLAGS = $(AM_CPPFLAGS)
testbase_LDFLAGS = $(AM_LDFLAGS)
#testbase_LDFLAGS = -lsnap-exp -lsnap-adv -lsnap-core -lglib-adv -lglib-core


EXT_FLAGS=
@MK@GITNUMTMP=$(shell cd "$(top_srcdir)"; A=$$(git show | head -n 1 | awk '{print $$2}'); echo $${A:0:7}; cd - > /dev/null )
#@MK@SVNNUMTMP=$(shell cd "$(top_srcdir)"; LC_ALL=C svn info | grep -i Revision | awk '{print $$2}'; cd - > /dev/null )
#@MK@ifeq ($(SVNNUMTMP),)
#EXT_FLAGS+= -DSVN_VERSION='"${GITNUMTMP}"'
#@MK@else
#EXT_FLAGS+= -DSVN_VERSION='"${SVNNUMTMP}"'
#@MK@endif
@MK@ifeq ($(GITNUMTMP),)
@MK@else
EXT_FLAGS+= -DSVN_VERSION='"${GITNUMTMP}"'
@MK@endif
DEFS+=$(EXT_FLAGS)


